name: Deploy to AWS

on:
  push:
    branches:
    - master
    paths:
    - 'tests/**'
    - 'src/**'
    - 'infra/**'
    - 'utils/**'
  pull_request:
    branches:
    - master
    paths:
    - 'tests/**'
    - 'src/**'
    - 'infra/**'
    - 'utils/**'

jobs:
  Build-Test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#noci')"
    container: lambci/lambda:build-python3.8

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install dependencies
      working-directory: ./src
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt --target .; fi
        if [ -f build-requirements.txt ]; then pip install -r build-requirements.txt; fi

    - name: Run Build Script
      working-directory: ./utils
      run: sh buildscript.sh

    - name: Run Tests
      working-directory: ./src
      run: |
        pip install pytest
        python -m pytest ../tests
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_ACCESS_SECRET }}

    - name: Build a package
      working-directory: ./src
      run: |
        zip -r9 payload.zip .
    
    - name: Upload file to bucket
      uses: zdurham/s3-upload-github-action@master
      env:
        FILE: ./src/payload.zip
        AWS_REGION: 'eu-west-2'
        S3_BUCKET: ${{ secrets.AWS_GITHUB_BUILDS_S3 }}
        S3_KEY: 'app-sentimentalists-backend-prod-${{ github.sha }}.zip'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_ACCESS_SECRET }}

  Deploy:
    needs: [Build-Test]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#noci')"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      if: github.event_name == 'pull_request'
      working-directory: ./infra/prod
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      working-directory: ./infra/prod
      id: init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_ACCESS_SECRET }}

    - name: Terraform Validate
      if: github.event_name == 'pull_request'
      working-directory: ./infra/prod
      id: validate
      run: terraform validate -no-color -var="s3_bucket=${{ secrets.AWS_GITHUB_BUILDS_S3 }}" -var="s3_key=app-sentimentalists-backend-prod-${{ github.sha }}.zip"

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      working-directory: ./infra/prod
      id: plan
      run: terraform plan -no-color -var="s3_bucket=${{ secrets.AWS_GITHUB_BUILDS_S3 }}" -var="s3_key=app-sentimentalists-backend-prod-${{ github.sha }}.zip"
      continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_ACCESS_SECRET }}

    - name: Pull Request - Add Plan to PR
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`${process.env.PLAN}\`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
          
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
           repo: context.repo.repo,
           body: output
          })

    - name: Merge - Apply TF
      if: github.event_name == 'push'
      working-directory: ./infra/prod
      id: apply
      run: terraform apply -auto-approve -no-color -var="s3_bucket=${{ secrets.AWS_GITHUB_BUILDS_S3 }}" -var="s3_key=app-sentimentalists-backend-prod-${{ github.sha }}.zip"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_ACCESS_SECRET }}
